-- Table: hotel_schema.rent_contract

-- DROP TABLE IF EXISTS hotel_schema.rent_contract;

CREATE TABLE IF NOT EXISTS hotel_schema.rent_contract
(
    rent_contract_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    contract_status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    conclusion_date date NOT NULL,
    terminate_date date NOT NULL,
    payment_status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    room_id integer NOT NULL,
    total_cost bigint,
    employee_id integer NOT NULL,
    guest_id integer NOT NULL,
    CONSTRAINT rent_contract_pk_3 PRIMARY KEY (rent_contract_id),
    CONSTRAINT contract_guest_passport_id_fk FOREIGN KEY (guest_id)
        REFERENCES hotel_schema.guest (guest_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT contract_rent_contract_employee_id_fk FOREIGN KEY (employee_id)
        REFERENCES hotel_schema.contract (employee_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT contract_room_room_id_fk FOREIGN KEY (room_id)
        REFERENCES hotel_schema.room (room_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT check_contract_status CHECK (contract_status::text = ANY (ARRAY['valid'::character varying, 'finished'::character varying, 'reserving'::character varying]::text[])),
    CONSTRAINT check_payment_status CHECK (payment_status::text = ANY (ARRAY['paid'::character varying, 'not paid'::character varying]::text[])),
    CONSTRAINT check_dates CHECK (conclusion_date <= terminate_date),
    CONSTRAINT check_total_cost CHECK (total_cost > 0 AND total_cost <= 1000000000)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS hotel_schema.rent_contract
    OWNER to postgres;